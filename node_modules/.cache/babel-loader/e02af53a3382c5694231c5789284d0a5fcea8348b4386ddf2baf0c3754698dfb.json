{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  lang: \"en\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Last 60 seconds\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"body\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"squareGreen\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"squareBlue\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"html\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString($setup.response), 1 /* TEXT */), _hoisted_2, _createElementVNode(\"p\", null, \" Feature A count \" + _toDisplayString($setup.featureACount) + \" Feature B count \" + _toDisplayString($setup.featureBCount), 1 /* TEXT */), _hoisted_3]);\n}","map":{"version":3,"names":["lang","_createElementVNode","class","_createElementBlock","_hoisted_1","_toDisplayString","$setup","response","_hoisted_2","featureACount","featureBCount","_hoisted_3"],"sources":["C:\\Projects\\Devoxx2023\\hello-world\\src\\components\\HelloWorld.vue"],"sourcesContent":["\n<template>\n\n<html lang=\"en\">\n  <p>\n\t\t{{ response }}\n\t</p>\n\t<h1>Last 60 seconds</h1>\n\t<p>\n\t\tFeature A count\n\t\t{{ featureACount }}\n    \n\t\tFeature B count {{ featureBCount }}\n\t</p>\n  <body >\n    <div class=\"squareGreen\"></div>\n    <div class=\"squareBlue\"></div>\n  </body>\n\n</html>\n\t\n</template>\n\n \n<script>\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n\tname: \"HelloWorld\",\n\tprops: {},\n\tsetup() {\n\t\tconst response = ref(\"\");\n\t\tconst featureACount = ref(0);\n\t\tconst featureBCount = ref(0);\n\t\tlet count = 0;\n\n\t\tfunction fetchData() {\n\t\t\t// I prefer to use fetch\n\t\t\t// you can use use axios as an alternative\n\t\t\treturn fetch(\n\t\t\t\t\"http://localhost:5216/BlueGreenDemo\"\n\t\t\t)\n\t\t\t\t.then(async (res) => {\n          var s = await res.text();\n\t\t\t\t\tif (s == \"You are in feature: A\") {\n\t\t\t\t\t\tfeatureACount.value++;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.indexOf(\"feature B\") > -1) {\n\t\t\t\t\t\tfeatureBCount.value++;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(`response is ${s} - featureACount: ${featureACount.value}, featureB Count: ${featureBCount.value}`);\n\t\t\t\t\tif (count > 60) {\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t}\n\n\t\tonMounted(() => {\n\t\t\tsetInterval(() => fetchData(), 300);\n\t\t});\n\n\t\treturn {\n\t\t\tfeatureACount,\n\t\t\tfeatureBCount,\n\t\t\tresponse,\n\t\t\tcount,\n\t\t};\n\t},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.squareGreen {\n  text-align: center;\n  display: inline-block;\n  height: 150px;\n  width: 150px;\n  background-color: #008000;\n  margin-right: 50px;\n}\n.squareBlue {\n  text-align: center;\n  display: inline-block;\n  height: 150px;\n  width: 150px;\n  background-color: #0000FF;\n  \n}\n.element {\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n  background: #ce8888;\n  }\n</style>\n"],"mappings":";;;EAGMA,IAAI,EAAC;AAAI;gEAIdC,mBAAA,CAAwB,YAApB,iBAAe;gEAOlBA,mBAAA,CAGO,e,aAFLA,mBAAA,CAA+B;EAA1BC,KAAK,EAAC;AAAa,I,aACxBD,mBAAA,CAA8B;EAAzBC,KAAK,EAAC;AAAY,G;;;uBAb3BC,mBAAA,CAgBO,QAhBPC,UAgBO,GAfLH,mBAAA,CAEG,WAAAI,gBAAA,CADAC,MAAA,CAAAC,QAAQ,kBAEZC,UAAwB,EACxBP,mBAAA,CAKI,WALD,mBAEF,GAAAI,gBAAA,CAAGC,MAAA,CAAAG,aAAa,IAAG,mBAEH,GAAAJ,gBAAA,CAAGC,MAAA,CAAAI,aAAa,kBAEhCC,UAGO,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}