{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  lang: \"en\"\n};\nconst _hoisted_2 = {\n  class: \"squares\"\n};\nconst _hoisted_3 = {\n  class: \"squareGreen\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"font-size\": \"50px\",\n    \"color\": \"aliceblue\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"squareBlue\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"font-size\": \"50px\",\n    \"color\": \"aliceblue\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"html\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString($setup.greenEnv), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.blueEnv), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["lang","class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$setup","greenEnv","_hoisted_5","_hoisted_6","blueEnv"],"sources":["C:\\Projects\\Devoxx2023\\UI\\src\\components\\HelloWorld.vue"],"sourcesContent":["\r\n<template>\r\n\t<html lang=\"en\">\r\n\t<div class=\"squares\">\r\n\t\t<div class=\"squareGreen\">\r\n\t\t\t<p style=\"font-size:50px; color:aliceblue\">{{ greenEnv }}</p>\r\n\t\t</div>\r\n\t\t<div class=\"squareBlue\">\r\n\t\t\t<p style=\"font-size:50px; color:aliceblue\">{{ blueEnv }}</p>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t</html>\r\n</template>\r\n\r\n \r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nexport default {\r\n\tname: \"HelloWorld\",\r\n\tprops: {},\r\n\tsetup() {\r\n\r\n\t\tconst response = ref(\"\");\r\n\t\tconst blueEnv = ref(0);\r\n\t\tconst greenEnv = ref(0); \r\n\t\t\r\n\t\tfunction fetchData() {\r\n\t\t\treturn fetch(\r\n\t\t\t\t\"http://devoxx2023.dev.k8s.signalocean.com/ServiceBusCount\",{cache: 'no-cache'}\r\n\t\t\t)\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tconsole.log(await res.json);\r\n\t\t\t\t\tvar textValue = await res.json();\r\n\t\t\t\t\tif (textValue.environment == \"blue\") {\r\n\t\t\t\t\t\tblueEnv.value = textValue.queueMessagesProccessed;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (textValue.environment == \"green\") {\r\n\t\t\t\t\t\tgreenEnv.value = textValue.queueMessagesProccessed;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tonMounted(() => {\r\n\t\t\tsetInterval(() => fetchData(), 10000);\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tblueEnv,\r\n\t\t\tgreenEnv,\r\n\t\t\tresponse, \r\n\t\t};\r\n\t},\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.squares {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n}\r\n\r\n.squareGreen {\r\n\ttext-align: center;\r\n\tdisplay: inline-block;\r\n\theight: 150px;\r\n\twidth: 150px;\r\n\tbackground-color: #008000;\r\n\tmargin-right: 5%;\r\n\tborder-style: ridge;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n.squareBlue {\r\n\ttext-align: center;\r\n\tdisplay: inline-block;\r\n\theight: 150px;\r\n\twidth: 150px;\r\n\tbackground-color: #0000FF;\r\n\tdisplay: flex;\r\n\tborder-style: ridge;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\r\n}\r\n</style>\r\n"],"mappings":";;;EAEOA,IAAI,EAAC;AAAI;;EACVC,KAAK,EAAC;AAAS;;EACdA,KAAK,EAAC;AAAa;;EACpBC,KAAuC,EAAvC;IAAA;IAAA;EAAA;AAAuC;;EAEtCD,KAAK,EAAC;AAAY;;EACnBC,KAAuC,EAAvC;IAAA;IAAA;EAAA;AAAuC;;uBAN5CC,mBAAA,CAUO,QAVPC,UAUO,GATPC,mBAAA,CAOM,OAPNC,UAOM,GANLD,mBAAA,CAEM,OAFNE,UAEM,GADLF,mBAAA,CAA6D,KAA7DG,UAA6D,EAAAC,gBAAA,CAAfC,MAAA,CAAAC,QAAQ,iB,GAEvDN,mBAAA,CAEM,OAFNO,UAEM,GADLP,mBAAA,CAA4D,KAA5DQ,UAA4D,EAAAJ,gBAAA,CAAdC,MAAA,CAAAI,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}