{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport axios from 'axios';\nexport default {\n  name: \"HelloWorld\",\n  props: {},\n  setup() {\n    const response = ref(\"\");\n    const featureACount = ref(0);\n    const featureBCount = ref(0);\n    let count = 0;\n    function fetchData() {\n      // I prefer to use fetch\n      // you can use use axios as an alternative\n      return axios.get(\"http://localhost:5216/BlueGreenDemo\").then(async res => {\n        response.value = await res.text();\n        if (response.value.indexOf(\"feature A\") > -1) {\n          featureACount.value++;\n        }\n        if (response.value.indexOf(\"feature B\") > -1) {\n          featureBCount.value++;\n        }\n        // console.log(`response is ${response.value} - featureACount: ${featureACount.value}, featureB Count: ${featureBCount.value}`);\n        if (count > 60) {\n          count = 0;\n        }\n        count++;\n      }).catch(err => {\n        throw err;\n      });\n    }\n    onMounted(() => {\n      setInterval(() => fetchData(), 300);\n    });\n    return {\n      featureACount,\n      featureBCount,\n      response,\n      count\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","props","setup","response","featureACount","featureBCount","count","fetchData","get","then","res","value","text","indexOf","catch","err","setInterval"],"sources":["C:\\Projects\\Devoxx2023\\hello-world\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n\t<p>\n\t\t{{ response }}\n\t</p>\n\t<h1>Last 60 seconds</h1>\n\t<p>\n\t\tFeature A count\n\t\t{{ featureACount }}\n\t\tFeature B count {{ featureBCount }}\n\t</p>\n</template>\n\n \n<script>\nimport { ref, onMounted } from \"vue\";\nimport axios from 'axios';\n\nexport default {\n\tname: \"HelloWorld\",\n\tprops: {},\n\tsetup() {\n\t\tconst response = ref(\"\");\n\t\tconst featureACount = ref(0);\n\t\tconst featureBCount = ref(0);\n\t\tlet count = 0;\n\n\t\tfunction fetchData() {\n\t\t\t// I prefer to use fetch\n\t\t\t// you can use use axios as an alternative\n\t\t\treturn axios.get(\n\t\t\t\t\"http://localhost:5216/BlueGreenDemo\"\n\t\t\t)\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tresponse.value = await res.text();\n\t\t\t\t\tif (response.value.indexOf(\"feature A\") > -1) {\n\t\t\t\t\t\tfeatureACount.value++;\n\t\t\t\t\t}\n\t\t\t\t\tif (response.value.indexOf(\"feature B\") > -1) {\n\t\t\t\t\t\tfeatureBCount.value++;\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(`response is ${response.value} - featureACount: ${featureACount.value}, featureB Count: ${featureBCount.value}`);\n\t\t\t\t\tif (count > 60) {\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t}\n\n\t\tonMounted(() => {\n\t\t\tsetInterval(() => fetchData(), 300);\n\t\t});\n\n\t\treturn {\n\t\t\tfeatureACount,\n\t\t\tfeatureBCount,\n\t\t\tresponse,\n\t\t\tcount,\n\t\t};\n\t},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAcA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACdC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,CAAC;EACTC,KAAKA,CAAA,EAAG;IACP,MAAMC,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,aAAY,GAAIP,GAAG,CAAC,CAAC,CAAC;IAC5B,MAAMQ,aAAY,GAAIR,GAAG,CAAC,CAAC,CAAC;IAC5B,IAAIS,KAAI,GAAI,CAAC;IAEb,SAASC,SAASA,CAAA,EAAG;MACpB;MACA;MACA,OAAOR,KAAK,CAACS,GAAG,CACf,qCAAoC,CACrC,CACEC,IAAI,CAAC,MAAOC,GAAG,IAAK;QACpBP,QAAQ,CAACQ,KAAI,GAAI,MAAMD,GAAG,CAACE,IAAI,EAAE;QACjC,IAAIT,QAAQ,CAACQ,KAAK,CAACE,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,EAAE;UAC7CT,aAAa,CAACO,KAAK,EAAE;QACtB;QACA,IAAIR,QAAQ,CAACQ,KAAK,CAACE,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,EAAE;UAC7CR,aAAa,CAACM,KAAK,EAAE;QACtB;QACA;QACA,IAAIL,KAAI,GAAI,EAAE,EAAE;UACfA,KAAI,GAAI,CAAC;QACV;QACAA,KAAK,EAAE;MACR,CAAC,EACAQ,KAAK,CAAEC,GAAG,IAAK;QACf,MAAMA,GAAG;MACV,CAAC,CAAC;IACJ;IAEAjB,SAAS,CAAC,MAAM;MACfkB,WAAW,CAAC,MAAMT,SAAS,EAAE,EAAE,GAAG,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO;MACNH,aAAa;MACbC,aAAa;MACbF,QAAQ;MACRG;IACD,CAAC;EACF;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}